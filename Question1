const express = require('express');
const axios = require('axios');

const app = express();
const port = 9876;
const windowSize = 10;
let window = [];

app.get('/numbers/:numberid', async (req, res) => {
  try {
    const { numberid } = req.params;
    
    if (!['p', 'f', 'e', 'r'].includes(numberid)) {
      return res.status(400).json({
        error: 'Invalid number ID. Must be one of: p, f, e, r'
      });
    }
    
    let apiUrl;
    switch (numberid) {
      case 'p':
        apiUrl = 'http://20.244.56.144/evaluation-service/primes';
        break;
      case 'f':
        apiUrl = 'http://20.244.56.144/evaluation-service/fibo';
        break;
      case 'e':
        apiUrl = 'http://20.244.56.144/evaluation-service/even';
        break;
      case 'r':
        apiUrl = 'http://20.244.56.144/evaluation-service/rand';
        break;
    }
    
    const windowPrevState = [...window];
    
    const response = await axios.get(apiUrl, { timeout: 500 });
    const numbers = Array.isArray(response.data.numbers) 
      ? response.data.numbers 
      : JSON.parse(response.data.numbers);
    
    for (const num of numbers) {
      if (!window.includes(num)) {
        if (window.length >= windowSize) {
          window.shift();
        }
        window.push(num);
      }
    }
    
    const windowCurrState = [...window];
    const avg = window.length > 0 
      ? window.reduce((sum, num) => sum + num, 0) / window.length 
      : 0;
    
    res.json({
      windowPrevState,
      windowCurrState,
      numbers: JSON.stringify(numbers),
      avg: parseFloat(avg.toFixed(2))
    });
  } catch (error) {
    res.status(500).json({
      error: `Error: ${error.message}`
    });
  }
});

app.listen(port, () => {
  console.log(`Server running at http://localhost:${port}/`);
});
